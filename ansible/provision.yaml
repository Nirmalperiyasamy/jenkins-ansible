---
- name: Provision AWS Infrastructure and Setup Jenkins Host
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    region: us-east-1
    key_name: my-key
    instance_type: t2.medium
    ami: ami-0c02fb55956c7d316
    vpc_cidr: "10.0.0.0/16"
    subnet_cidr: "10.0.1.0/24"
    security_group_name: web-sg

  tasks:
    - name: Create VPC
      amazon.aws.ec2_vpc_net:
        cidr_block: "{{ vpc_cidr }}"
        region: "{{ region }}"
        name: web-vpc
        tags:
          Name: web-vpc
          Environment: jenkins-k8s
        state: present
      register: vpc

    - name: Create Internet Gateway
      amazon.aws.ec2_vpc_igw:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        tags:
          Name: web-igw
          Environment: jenkins-k8s
        state: present
      register: igw

    - name: Create subnet
      amazon.aws.ec2_vpc_subnet:
        vpc_id: "{{ vpc.vpc.id }}"
        cidr: "{{ subnet_cidr }}"
        region: "{{ region }}"
        az: "{{ region }}a"
        map_public: yes
        tags:
          Name: web-subnet
          Environment: jenkins-k8s
        state: present
      register: subnet

    - name: Create route table
      amazon.aws.ec2_vpc_route_table:
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
        subnets:
          - "{{ subnet.subnet.id }}"
        tags:
          Name: web-rt
          Environment: jenkins-k8s
      register: route_table

    - name: Create security group
      amazon.aws.ec2_security_group:
        name: "{{ security_group_name }}"
        description: "Security group for Jenkins K8s deployment"
        vpc_id: "{{ vpc.vpc.id }}"
        region: "{{ region }}"
        rules:
          - proto: tcp
            ports: [22]
            cidr_ip: 0.0.0.0/0
            rule_desc: SSH access
          - proto: tcp
            ports: [80]
            cidr_ip: 0.0.0.0/0
            rule_desc: HTTP access
          - proto: tcp
            ports: [443]
            cidr_ip: 0.0.0.0/0
            rule_desc: HTTPS access
          - proto: tcp
            ports: [8080]
            cidr_ip: 0.0.0.0/0
            rule_desc: Jenkins UI access
          - proto: tcp
            ports: [6443]
            cidr_ip: 0.0.0.0/0
            rule_desc: Kubernetes API server
          - proto: tcp
            ports: [10250]
            cidr_ip: 0.0.0.0/0
            rule_desc: Kubelet API
        tags:
          Name: "{{ security_group_name }}"
          Environment: jenkins-k8s
      register: sg

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        key_name: "{{ key_name }}"
        region: "{{ region }}"
        instance_type: "{{ instance_type }}"
        image_id: "{{ ami }}"
        wait: yes
        wait_timeout: 300
        security_groups:
          - "{{ sg.group_id }}"
        vpc_subnet_id: "{{ subnet.subnet.id }}"
        network:
          assign_public_ip: yes
        tags:
          Name: web-instance
          Environment: jenkins-k8s
          Role: kubernetes-master
        state: present
      register: ec2

    - name: Wait for EC2 instance to be running
      amazon.aws.ec2_instance_info:
        region: "{{ region }}"
        instance_ids:
          - "{{ ec2.instance_ids[0] }}"
      register: instance_info
      until: instance_info.instances[0].state.name == "running"
      retries: 10
      delay: 30

    - name: Add instance to Ansible inventory
      add_host:
        hostname: "{{ instance_info.instances[0].public_ip_address }}"
        groupname: web
        ansible_user: ubuntu
        ansible_ssh_private_key_file: "~/.ssh/{{ key_name }}.pem"
        ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    - name: Create inventory file
      copy:
        content: |
          [web]
          {{ instance_info.instances[0].public_ip_address }} ansible_user=ubuntu ansible_ssh_private_key_file=~/.ssh/{{ key_name }}.pem ansible_ssh_common_args='-o StrictHostKeyChecking=no'
        dest: ./inventory
        mode: '0644'

    - name: Display connection information
      debug:
        msg:
          - "EC2 Instance launched successfully!"
          - "Instance ID: {{ ec2.instance_ids[0] }}"
          - "Public IP: {{ instance_info.instances[0].public_ip_address }}"
          - "Private IP: {{ instance_info.instances[0].private_ip_address }}"
          - "SSH Command: ssh -i ~/.ssh/{{ key_name }}.pem ubuntu@{{ instance_info.instances[0].public_ip_address }}"
          - "Inventory file created: ./inventory"
          - "Wait 2-3 minutes before running the Jenkins deployment playbook"

    - name: Wait for SSH to be available
      wait_for:
        host: "{{ instance_info.instances[0].public_ip_address }}"
        port: 22
        delay: 10
        timeout: 300
        state: started
      delegate_to: localhost